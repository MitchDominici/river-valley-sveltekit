#sync-csvs.yml
name: Sync CSVs
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2

      - name: Download Main CSVs
        run: |
          curl -L "https://docs.google.com/spreadsheets/d/1WYtDTG0mg_jcCBrjHs53rflPrVQLN-xlU0UBdIYFnFg/export?format=csv" -o static/data/towns.csv
          curl -L "https://docs.google.com/spreadsheets/d/1ixfJDFK1FRsSfAkbebQxMbhpFaeb-C3jit0IoVRnKyo/export?format=csv" -o static/data/businesses.csv

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Download Event CSVs
        env:
          FOLDER_ID: '18lzxsWJFhZz0RBmPrkPVBMiOdG-g4SFj'
          DRIVE_API_KEY: ${{ secrets.DRIVE_API_KEY }}
        run: |
          # Create events directory
          mkdir -p static/data/events

          # Download file list and CSVs
          node - <<'EOF'
          const https = require('https');
          const fs = require('fs');
          const path = require('path');

          const folderId = process.env.FOLDER_ID;
          const apiKey = process.env.DRIVE_API_KEY;

          async function listFiles() {
            return new Promise((resolve, reject) => {
              https.get(
                `https://www.googleapis.com/drive/v3/files?q='${folderId}'+in+parents&key=${apiKey}`,
                (res) => {
                  let data = '';
                  res.on('data', chunk => data += chunk);
                  res.on('end', () => resolve(JSON.parse(data).files));
                }
              ).on('error', reject);
            });
          }

          async function downloadFile(fileId, fileName) {
            return new Promise((resolve, reject) => {
              https.get(
                `https://www.googleapis.com/drive/v3/files/${fileId}?alt=media&key=${apiKey}`,
                (res) => {
                  const filePath = path.join('static/data/events', fileName);
                  console.log(`Downloading ${fileName} to ${filePath}`);
                  const fileStream = fs.createWriteStream(filePath);
                  res.pipe(fileStream);
                  fileStream.on('finish', resolve);
                }
              ).on('error', reject);
            });
          }

          async function main() {
            try {
              const files = await listFiles();
              console.log(files);
              for (const file of files) {
                if (file.name.endsWith('.csv')) {
                  await downloadFile(file.id, file.name);
                  console.log(`Downloaded ${file.name}`);
                }
              }
            } catch (error) {
              console.error('Error:', error);
              //process.exit(1);
            }
          }

          main();
          EOF



      - name: Commit changes
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git remote set-url origin https://${{ secrets.EVENTS_EXPORT }}@github.com/${{ github.repository }}
          git add .
          git commit -m "Auto-sync CSVs" || exit 0
          git push